"use client";

import { Chart, registerables } from "chart.js";
import { getMalware } from "../../app/lib/data";
import { useEffect, useRef, useState } from "react";

Chart.register(...registerables);

export default function Malware() {
  const [data, setData] = useState<any | null>(null);
  const chartRef = useRef<HTMLCanvasElement>(null);
  const chartInstanceRef = useRef<Chart | null>(null);

  useEffect(() => {
    getMalware().then(setData);
  }, []);

  useEffect(() => {
    if (data && chartRef.current) {
      // Destroy previous chart instance if exists
      if (chartInstanceRef.current) {
        chartInstanceRef.current.destroy();
      }

      const labels = data.map((item: any) => item.category);
      const values = data.map((item: any) => item.threat_count);

      chartInstanceRef.current = new Chart(chartRef.current, {
        type: "doughnut",
        data: {
          labels,
          datasets: [
            {
              label: "Malware Attacks",
              data: values,
              backgroundColor: [
                "rgba(255, 99, 132, 0.2)",
                "rgba(54, 162, 235, 0.2)",
                "rgba(255, 206, 86, 0.2)",
              ],
              borderColor: [
                "rgba(255, 99, 132, 1)",
                "rgba(54, 162, 235, 1)",
                "rgba(255, 206, 86, 1)",
              ],
              borderWidth: 1,
            },
          ],
        },
      });
    }

    // Cleanup: destroy chart on unmount
    return () => {
      if (chartInstanceRef.current) {
        chartInstanceRef.current.destroy();
        chartInstanceRef.current = null;
      }
    };
  }, [data]);

  return (
    <main>
      <p className="text-base/7 font-semibold text-white">
        Malware Attacks Overview
      </p>
      <div className="w-48 h-48">
        <canvas ref={chartRef} className="w-full h-full" />
      </div>
    </main>
  );
}